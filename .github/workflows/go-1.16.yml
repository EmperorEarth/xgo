name: go-1.16

on:
  pull_request:
    branches:
      - 'master'
    paths:
      - '.github/workflows/go-1.16.yaml'
      - 'docker/go-1.16/**'
  push:
    branches:
      - 'master'
    paths:
      - '.github/workflows/go-1.16.yaml'
      - 'docker/go-1.16/**'
    tags:
      - 'go-1.16-*'

env:
  BASE_IMAGE: ghcr.io/crazy-max/xgo:base
  LATEST: 1.16.0

jobs:
  docker:
    strategy:
      matrix:
        go_version:
          - 1.16.0
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        run: |
          TAGS="crazymax/xgo:${{ matrix.go_version }}"
          TAGS="${TAGS},ghcr.io/crazy-max/xgo:${{ matrix.go_version }}"
          if [ "${{ env.LATEST }}" = "${{ matrix.go_version }}" ]; then
            TAGS="${TAGS},crazymax/xgo:1.16.x"
            TAGS="${TAGS},ghcr.io/crazy-max/xgo:1.16.x"
            TAGS="${TAGS},crazymax/xgo:latest"
            TAGS="${TAGS},ghcr.io/crazy-max/xgo:latest"
          fi
          echo "TAGS=${TAGS}" >> $GITHUB_ENV
      -
        name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/go-1.16-')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/go-1.16-')
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker/go-1.16/go-${{ matrix.go_version }}
          file: ./docker/go-1.16/go-${{ matrix.go_version }}/Dockerfile
          push: ${{ startsWith(github.ref, 'refs/tags/go-1.16-') }}
          tags: ${{ env.TAGS }}
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
